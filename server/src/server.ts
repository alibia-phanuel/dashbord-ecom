import dotenv from "dotenv";
// Import du package dotenv pour charger les variables d'environnement

import { sequelize } from "./config/database";
// Import de l'instance Sequelize configurÃ©e pour la base MySQL

import app from "./app";
// Import de l'application Express dÃ©finie dans app.ts

dotenv.config();
// Chargement des variables d'environnement depuis le fichier .env

// ðŸ“¦ Import des modÃ¨les Sequelize
import "./models";

const PORT = process.env.PORT || 5000;
// RÃ©cupÃ©ration du port dans les variables d'environnement ou 5000 par dÃ©faut

// Test de la connexion Ã  la base MySQL avec Sequelize
sequelize
  .authenticate()
  .then(async () => {
    console.log("Connexion Ã  MySQL rÃ©ussie");

    // Synchronisation des modÃ¨les Sequelize avec la base (crÃ©ation/modification des tables)
    await sequelize.sync({ alter: true });
    console.log("Base de donnÃ©es synchronisÃ©e");

    // DÃ©marrage du serveur Express sur le port dÃ©fini
    app.listen(PORT, () => {
      console.log(`ðŸš€ Serveur lancÃ© sur http://localhost:${PORT}`);
    });
  })
  .catch((error) => {
    // Gestion d'erreur si la connexion Ã  MySQL Ã©choue
    console.error("Erreur de connexion MySQL:", error);
  });
